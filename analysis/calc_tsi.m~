clear all; close all; clc
restoredefaultpath; addpath(genpath(pwd));
%% --- Dimensions of Experiment ---------------------------------------------

Nsites = 20;            % # sites
Years  = 1999:2006;     % year range (not all sites have all years)
Nsamps = 3000;          % # samples per site
Nparms = 49;            % # parameters for each model config
Noutps = 5;             % # model output variables
Nconfg = 4;             % # model configurations

% initialize storage of the sensitivity indexes
TTSI = zeros(Nparms,2,Noutps,Nsites,length(Years),Nconfg)-9999;
FFSI = zeros(Nparms,2,Noutps,Nsites,length(Years),Nconfg)-9999;

%% --- Gather Data from Each Noah-MP Configuration --------------------------

for s = 1:Nsites                  % loop through sites
 for y = 1:length(Years)         % loop through years
  for c = 1:Nconfg               % loop through model configurations

   % match model config index with directory name
   switch c
    case(1); mvar = 'noah_type';
    case(2); mvar = 'clm_type';
    case(3); mvar = 'ssib_type';
    case(4); mvar = 'dveg3';
   end

   % try to load resutls for site/year
   try                    
    tempParms = Nparms;
    fname = strcat('../sensitivity_',mvar,'/run_',num2str(s),'_',num2str(Years(y)),'/progress.mat');
    load(fname);
    Npc = Nparms;
    Nparms = tempParms;
   catch
    continue
   end % site/year exists

   % calculate Sobol indices for each output dimension
   for d = 1:Noutps 

    % concatenate samples of model output
    YY = [Y1(1:Nsamps,:,d),Y2(1:Nsamps,:,d),Y12(1:Nsamps,:,d),Y21(1:Nsamps,:,d)];

    % concatenate parameters used to generate samples
    XX = [Q1,Q2];
 
    % calculate sobol indices
    [FFSI(1:Npc,:,d,s,y,c),TTSI(1:Npc,:,d,s,y,c)] = Sobol(YY); 

    % screen report
    fprintf('successfully completed site=%d, year=%d, config=%d \n',s,y,c);

   end % % output variables
  end % configs
 end % years
end % sites

%% --- Save Results ---------------------------------------------------------

save('./data/FFSI.mat','FFSI','-v7.3');
save('./data/TTSI.mat','TTSI','-v7.3');

%%% --- Make Plots -----------------------------------------------------------
%
%% make some plotting tools
%markers = ['o','s','x','d','*','p','+','h','<','>','^','v'];
%colors = [0,0,0
%          1,0,0
%          0,1,0
%          0,0,1
%          1,0,1
%          0,1,1
%          1,1,0
%          1,0.5,0
%          0.5,0.5,0
%          0.5,0,0.5
%          0,0.5,0.5];
%
%% names of the different model outputs
%obsNames = [{'Latent Heat'}% [W/m^2]'}
%            {'Sensible Heat'}% [W/m^2]'}
%            {'Soil Moisture 1'}% [m^3/m^3]'}
%            {'Soil Moisture 2 '}%[m^3/m^3]'}
%            {'Net Ecosystem Exchange'}];% [umol/m^2s]'}]; 
%
%% remove any sites with missing data 
%Is = [];
%for s = 1:Nsites
% data = squeeze(TTSI(:,:,:,s,:,:));
% data = data(:);
% if length(find(data>-9000)) > 0
%  Is = [Is;s];
% end
%end
%TSI = TTSI(:,:,:,Is,:,:);
%FSI = TTSI(:,:,:,Is,:,:);
%
%% number of sites with good data
%Nsites = length(Is);
%
%%; parameter names
%fid = fopen('parmNames.txt');
%line = fgetl(fid); p = 0;
%while line ~= -1
%  p = p+1;
%  parmNames{p} = line;
%  line = fgetl(fid);
%end
%
%% site names
%siteNames = [{'Amplero'};{'Blodgett'};{'Bugac'};{'ElSaler2'};{'ElSaler'};{'Espirra'}; ...
%             {'FortPeck'};{'Harvard'};{'Hesse'};{'Howlandm'};{'Howard'};{'Hyytiala'}; ...
%             {'Kruger'};{'Loobos'};{'Merbleue'};{'Mopane'};{'Palang'};{'Sylvania'}; ...
%             {'Tumba'};{'UniMich'}];
%
%% model configuration names
%configs = [{'NOAH-type'},{'CLM-type'},{'SSiB-type'},{'Prescribed LAI'}];
%
%% --- make output-specific plots
%
%% remove unused parameters in static veg
%TSI(5:30,:,:,:,:,4) = -9999;
%
%fignum = 0;
%
%% different plot for each output variable
%for d = 1%:Noutps
% 
% % initialize a new figure
% fignum = fignum + 1;
% figure(fignum); close(fignum); figure(fignum);
% set(gcf,'color','w','position',[1925,0,2550,1250])
%
% % loop through sites
% for s = 1:Nsites
%
%  % loop through model configurations (as subplots) 
%  for c = 1:Nconfg
%
%   % grab data for this site and output
%   Iy = find(all(squeeze(TSI(1:Nparms,1,d,s,:,c))<-9990));
%   Yy = 1:length(Years); Iy = Yy(~ismember(Yy,Iy));
%   means1 = mean(squeeze(TSI(1:Nparms,1,d,s,Iy,c)),2);
%   means2 = mean(squeeze(TSI(1:Nparms,2,d,s,Iy,c)),2);
%   stdvs1 = std(squeeze(TSI(1:Nparms,1,d,s,Iy,c)),[],2);
%   stdvs2 = std(squeeze(TSI(1:Nparms,2,d,s,Iy,c)),[],2);
%
%   % subplots for different model configurations
%   subplot(1,Nconfg,c);
%   
%   if max(means1(:)>-9000)
%
%    h(s) = plot(means1(1:tempParms),1:tempParms,...
%       'linestyle','none','marker',markers(1),'color',colors(s,:),...
%       'linewidth',2,'markersize',10);
%    hold on;
%
%   end % is data present at this site-year
%
%   % aesthetics
%   grid on;
%   set(gca,'ytick',1:Nparms,'yticklabel',parmNames,'ylim',[1,Nparms+0.01],'xlim',[-0.2,1]);
%   title(configs{c},'fontsize',16);
%   xlabel('Total Effect Index','fontsize',14);
%   if d == 1 && s == Nsites; legend(h,siteNames(Is),'location','se'); end
%
%  end % configurations
% end % sites
%
%% % save figure
%% set(gcf,'PaperPositionMode','auto');
%% print(gcf,'-djpeg',strcat('./figures/tsi_plots_',obsNames(d),'.jpg'));
%
%end % outputs
%
%
%
